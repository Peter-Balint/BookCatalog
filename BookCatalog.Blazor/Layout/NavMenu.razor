@inject BookCatalog.Blazor.Model.BookCatalogModel Model;
@inject NavigationManager Navigation;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="bookListing">BookCatalog.Blazor</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="bookListing" Match="NavLinkMatch.All">
                <span class="bi " aria-hidden="true"></span> Book Listing
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="creation" Match="NavLinkMatch.All">
                <span class="bi " aria-hidden="true"></span> Creation
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="update" Match="NavLinkMatch.All">
                <span class="bi " aria-hidden="true"></span> Update
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <button @onclick="()=>Logout()">Logout</button>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout(){
        if(await Model.LogoutAsync()){
            Navigation.NavigateTo("/login");
        }
    }
}
